{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAW,CACfC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,UAkB/B,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WAELN,EACFI,EAAI,CAAEG,SAAAT,EAAUP,MAAAQ,IAGhBM,EAAI,CAAEE,SAAAT,EAAUP,MAAAQ,G,GAGjBA,E,IAIFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MACjBmB,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MAClBmB,EAAAtB,GAASuB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANtB,EAAM,M,IAnCzED,EAASM,KAAKoB,iBAAiB,UAE/B,SAAiBC,GACfA,EAAIC,iBAKJ,IAJA,IAAI3B,EAAQ4B,OAAO7B,EAASC,MAAM6B,OAC5B1B,EAAOyB,OAAO7B,EAASI,KAAK0B,OAC5BzB,EAASwB,OAAO7B,EAASK,OAAOyB,OAE7BC,EAAI,EAAGA,GAAK1B,EAAQ0B,GAAI,EAC/BxB,EAAcwB,EAAG9B,GACjBA,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst elements = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"stop\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nelements.form.addEventListener(\"submit\", onClick)\n\nfunction onClick(evt) {\n  evt.preventDefault();\n  let delay = Number(elements.delay.value);\n  const step = Number(elements.step.value);\n  const amount = Number(elements.amount.value);\n  let position;\n  for (let i = 1; i <= amount; i+= 1) {\n    createPromise(i, delay);\n    delay += step;\n    \n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      \n      if (shouldResolve) {\n        res({ position, delay });\n        // Fulfill\n      } else {\n        rej({ position, delay });\n        // Reject\n      }\n    }, delay);\n   \n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  \n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$elements","delay","document","querySelector","step","amount","form","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","res","rej","setTimeout","position","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","Number","value","i"],"version":3,"file":"03-promises.eb9327ce.js.map"}